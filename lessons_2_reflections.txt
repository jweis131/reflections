What happens when you initialize a repository? Why do you need to do it?
	When you initialize a repository you are creating a new repository with no commits yet to the repository. To do this you need to cd into the directory you wish to create the repository and run git init. 

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is the area between working directory and committing to your repository. The value in this is that you can have multiple files in a staging area and only submit one commit. 

How can you use the staging area to make sure you have one commit per logical change?

You can add your files to the staging area and review them using git status before submitting the changes to the repository. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

A situation where branches can be used is when you want to add an experimental feature to your code but do not want that change in your production of your website or application. 

How do the diagrams help you visualize the branch structure?

The diagrams help me see the different reachability and a back log of sorts of commits. 

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The result in merging two branches together is getting all the code that was added or deleted from the previous master into a new master or head. It is represented on the diagram as separate branches to show the difference between the current master and the branches in production. Then the two branches are shown coming together into one new main master showing that the two separate branches now make the new master.

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?

Pros of git automatic merging are having the most up-to-date code in your branch to test what every it is you are working on with production code. Cons are you may not want to accidentally merge a branch into master which could be done if not carful.